{"version":2,"kind":"Notebook","sha256":"8a4c9a331d03ef0d643b8f79bbe08b25edf3f09755e2d74b1e8e5e1496e6cf50","slug":"notebooks.snowdepth","location":"/notebooks/snowdepth.ipynb","dependencies":[],"frontmatter":{"title":"Snow Depth Applications","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"default","language":"python"},"authors":[{"nameParsed":{"literal":"ICESat-2 team","given":"ICESat-2","family":"team"},"name":"ICESat-2 team","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/ICESAT-2HackWeek/icesat2-cookbook","copyright":"2025","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"source_url":"https://github.com/ICESAT-2HackWeek/icesat2-cookbook/blob/main/notebooks/snowdepth.ipynb","edit_url":"https://github.com/ICESAT-2HackWeek/icesat2-cookbook/edit/main/notebooks/snowdepth.ipynb","exports":[{"format":"ipynb","filename":"snowdepth.ipynb","url":"/icesat2-cookbook/build/snowdepth-fe5fedbd1ff264507be2eab458001756.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Author(s)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IyImTRgNE3"}],"identifier":"author-s","label":"Author(s)","html_id":"author-s","implicit":true,"key":"u5Aa5tLZ0F"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Karina Zikan, Zach Fair","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"lN8SsnHL2N"}],"key":"SwS7jCDCgT"},{"type":"heading","depth":2,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Learning Outcomes","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"LWJUaFMJv2"}],"identifier":"learning-outcomes","label":"Learning Outcomes","html_id":"learning-outcomes","implicit":true,"key":"VCetge5FQh"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Gain experience in working with SlideRule to access and pre-process ICESat-2\ndata","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"CvgPMWJSTH"}],"key":"bDhinaT2ds"}],"key":"MKJHZPVoLO"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Learn how to use projections and interpolation to compare ICESat-2 track data\nwith gridded raster products","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"g1IppVrL8K"}],"key":"D8jegVxk3R"}],"key":"UJ3GlbQhWh"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Develop a general understanding of how to measure snow depths with LiDAR,\nand learn about opportunities and challenges when using ICEsat-2 along-track\nproducts","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"QCeBvLZWeu"}],"key":"Dr4O3wJ7ia"}],"key":"V8l4aQoWib"}],"key":"BjcTZnlKhM"}],"key":"NrkhY80z5c"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Background","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Dgqeabf3Pt"}],"identifier":"background","label":"Background","html_id":"background","implicit":true,"key":"jp5bTKfd9z"},{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"How do we measure snow depth with LiDAR?","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"VdDQHVHhSR"}],"identifier":"how-do-we-measure-snow-depth-with-lidar","label":"How do we measure snow depth with LiDAR?","html_id":"how-do-we-measure-snow-depth-with-lidar","implicit":true,"key":"mMFfPxWbuC"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"LiDAR is a useful tool for collecting high resolution snow depth maps over large spatial areas.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"P1mvNP1Xvf"}],"key":"tFSZ6nvICO"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Snow depth is measured from LiDAR by differencing a snow-free LiDAR map from a snow-covered LiDAR map of the same area of interest.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fTPGFW1hop"}],"key":"fh5B7SKyiN"}],"key":"rJC1C05HQd"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"TODO: Insert Figure 6 from Deems et al. here","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GrMgU1uhsc"}],"key":"rTrAqPy9mp"}],"key":"ifv3wf4IOM"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"TODO: Insert Figure 7b from Deems et al","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Hcvm8rfd6F"}],"key":"yHNWEBpEWh"}],"key":"qCIS3u1K9x"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Can we do this with ICESat-2?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YOVuLUujh1"}],"identifier":"can-we-do-this-with-icesat-2","label":"Can we do this with ICESat-2?","html_id":"can-we-do-this-with-icesat-2","implicit":true,"key":"YfyR2QJkHU"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Yes! By differencing snow-covered ICESat-2 transects from snow-free maps, we can calculate snow depth!","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"WV92dHaAvJ"}],"key":"Q0pAPyUYYX"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Performing the calculation with ICESat-2 is a little different from other LiDAR snow depth methods, given that ICESat-2 is a transect of points rather than gridded raster data. ICESat-2 also has sparse coverage in the mid-latitudes, so generating an effective snow-covered or snow-free map will be difficult.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"LunNM6aEYE"}],"key":"lpsyW6Aihi"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Because of these limitations, we need an independently-collected snow-free map of a region of interest for comparison. We also need to process the snow-free data into a form that can be differenced from snow-on ICESat-2 data.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Bpb7szDUYt"}],"key":"FGuOCArgtL"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"In this tutorial, we will show an example of how to compare ICESat-2 data to raster data.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"YipWESuulW"}],"key":"xThWgNai8C"}],"key":"YLJiTdRvIL"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"TODO: Add Karina’s image over Dry Creek","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jVHZmp9mCd"}],"key":"lqXIqiijEB"}],"key":"xu7yUSUWIC"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"What do we need to calculate snow depth from ICESat-2?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BeZlYhZqu0"}],"identifier":"what-do-we-need-to-calculate-snow-depth-from-icesat-2","label":"What do we need to calculate snow depth from ICESat-2?","html_id":"what-do-we-need-to-calculate-snow-depth-from-icesat-2","implicit":true,"key":"RNh1i5KWPZ"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"A region of interest, where snow-free (and snow-covered, for validation) digital elevation models (DEMs) are available.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"mVyEnozyka"}],"key":"oAyvISNiWF"}],"key":"pCHHTXdn7Y"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"ICESat-2 data, ideally from one of the lower-level products (ATL03, ATL06, ATL08, Sliderule Earth).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EMEUV8UvEv"}],"key":"ibpus7c9FP"}],"key":"PiYyXIZRwq"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"A snow-free reference DEM for the snow depth calculation.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"O0CMCWkfv5"}],"key":"DtudShPaGI"}],"key":"s4GvQOk3oC"}],"key":"mZwQsJoKXW"}],"key":"hBaeEnjfVA"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"What do we need to consider when comparing ICESat-2 and raster data?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"q9N3vggZ6V"}],"identifier":"what-do-we-need-to-consider-when-comparing-icesat-2-and-raster-data","label":"What do we need to consider when comparing ICESat-2 and raster data?","html_id":"what-do-we-need-to-consider-when-comparing-icesat-2-and-raster-data","implicit":true,"key":"idYLdCG2Ep"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"strong","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Geolocation","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"tR35WbJEcA"}],"key":"B4a36HgOAn"},{"type":"text","value":": To obtain usable results, it is important that we properly align the snow-free raster data with ICESat-2. Even small offsets can create large errors that worsen in rugged terrain.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"KDQftkN1DA"}],"key":"iqBElcAfvz"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"TODO: Add Figure 9 from Nuth and Kabb","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ehU7IKr7j0"}],"key":"dCnsFe3g6j"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Vegetation","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"vVXxH41Epm"}],"key":"ijosUKd99E"},{"type":"text","value":": Incorrectly categorized vegetation returns can positively bias ground or snow surface height estimation. Additionally, dense vegetation can reduce the number of photon returns, thereby increasing uncertainty in our height estimates.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"d2D7ECKqbX"}],"key":"Ms51ZQV8d9"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Slope Effects","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"H5DqahDCJH"}],"key":"pbS04jSJOE"},{"type":"text","value":": Rugged terrain increases uncertainty in ICESat-2 returns and increases the impact of geolocation offsets between ICESat-2 and raster data. Additionally, steep slopes can negatively bias ground or snow surface height estimates.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"hRWkfg8tx5"}],"key":"eacvm1N6zM"}],"key":"zmBJ148wni"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Computing Environment","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cgZ4kMkpiJ"}],"identifier":"computing-environment","label":"Computing Environment","html_id":"computing-environment","implicit":true,"key":"TypaegHmVJ"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We’ll be using the following open source Python libraries in this notebook:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"DBvAhH8yNi"}],"key":"WQDFTXlIs5"}],"key":"yJgA7Tkkdp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pandas as pd\nimport geopandas as gpd\nimport rioxarray as rxr\nimport matplotlib.pyplot as plt\nfrom sliderule import icesat2, sliderule\nfrom scipy.interpolate import RectBivariateSpline","key":"gRSFO1dqhK"},{"type":"output","id":"lBcvzRZ2bVUPfpts4PeAP","data":[],"key":"VJbF4QFqD9"}],"key":"WJEfy1pNxa"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"l6iF8gFPHM"}],"identifier":"data","label":"Data","html_id":"data","implicit":true,"key":"rqWcs9Zb3x"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We will use SlideRule to acquire customized ATL06 data. Specific customizations that we will implement include footprint averaging (i.e., along-track sampling rate) and photon identification (signal/noise and ground/vegetation).","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"eg6MvZI3im"}],"key":"jrt6GWefC8"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We will look at snow depth data over Upper Kuparuk/Toolik (UKT) on the Arctic North Slope of Alaska. Because UKT is a relatively flat region with little vegetation, we should expect good agreement between ICESat-2 and our rasters of interest.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"NgqleI1mbd"}],"key":"qSFfzp3kUE"}],"key":"LZrVL9PDrN"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Initialize SlideRule","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nI62ntfnam"}],"identifier":"initialize-sliderule","label":"Initialize SlideRule","html_id":"initialize-sliderule","implicit":true,"key":"oKIdYNnYqz"}],"key":"xHSzxMbtf7"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"icesat2.init(\"slideruleearth.io\")","key":"ZFBZUH11Ml"},{"type":"output","id":"IB_9cHR194TMKeZ2rTH9w","data":[],"key":"zRUWgKofWm"}],"key":"SHSycQaupu"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define Region of Interest","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"k8K9HSTkZG"}],"identifier":"define-region-of-interest","label":"Define Region of Interest","html_id":"define-region-of-interest","implicit":true,"key":"uHprRxlQcV"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"After we initialize SlideRule, we define our region of interest. Notice that there are two options given below. This is because SlideRule accepts either the coordinates of a box/polygon or a geoJSON for its ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"m8REC95h9h"},{"type":"inlineCode","value":"region","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"cHoKED0uYv"},{"type":"text","value":" input.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"CwXGTK7RXl"}],"key":"bcnICNkANp"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We are going to use the bounding box method in this tutorial, but the syntax for the geoJSON method is included for the user’s reference.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"RpKmceyHvl"}],"key":"wzn9Col9iG"}],"key":"zYpGOUWFTZ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Define region of interest over Toolik, Alaska\nregion = [{\"lon\":-149.5992624418217, \"lat\":68.63358948385529}, \n          {\"lon\":-149.5954459662985, \"lat\":68.60200878043223}, \n          {\"lon\":-149.2821268688734, \"lat\":68.60675802967609}, \n          {\"lon\":-149.2855031235162, \"lat\":68.63834638180673},\n          {\"lon\":-149.5992624418217, \"lat\":68.63358948385529}]\n\nprint(region)","key":"ZiBHshrrvI"},{"type":"output","id":"f9KNlK0Nu_sI2PMds3ojT","data":[{"output_type":"stream","name":"stdout","text":"[{'lon': -149.5992624418217, 'lat': 68.63358948385529}, {'lon': -149.5954459662985, 'lat': 68.60200878043223}, {'lon': -149.2821268688734, 'lat': 68.60675802967609}, {'lon': -149.2855031235162, 'lat': 68.63834638180673}, {'lon': -149.5992624418217, 'lat': 68.63358948385529}]\n"}],"key":"XZy81Oru8q"}],"key":"qs7WjiqrVF"},{"type":"block","kind":"notebook-content","children":[{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Note","key":"jLM7RrCvDB"}],"key":"NbMk9unHqt"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Here’s an alternate method, with geoJSON:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"I4P5JM2nbw"}],"key":"gA7qDbeA0P"},{"type":"code","lang":"python","value":"path = \"/path/to/geojson/\"\nregion = sliderule.toregion(path)[\"poly\"]\nprint(region)","position":{"start":{"line":4,"column":1},"end":{"line":7,"column":1}},"key":"L3XJq4KBxn"}],"key":"Ql6Qsyszzx"}],"key":"PDviElC4Tx"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Build SlideRule Request","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jGPaK7MhZN"}],"identifier":"build-sliderule-request","label":"Build SlideRule Request","html_id":"build-sliderule-request","implicit":true,"key":"zMpCePSUYh"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now we are going to build our SlideRule request by defining ICESat-2 parameters.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Tim041psWY"}],"key":"HfsUFr5CIs"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Since we want something close to the ATL06 product, we will use the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"V80xclE4pA"},{"type":"inlineCode","value":"icesat2.atl06p()","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"i3EUunFH6w"},{"type":"text","value":" function in this tutorial. You can find other SlideRule functions and more detail on the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"rBqYZch8zr"},{"type":"inlineCode","value":"icesat2.atl06p()","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"jBEab1iuhp"},{"type":"text","value":" function on the SlideRule API reference. (TODO: Add link to API reference)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"b4DyNt7dpa"}],"key":"EkCmQd6osk"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"We won’t use every parameter in this tutorial, but here is a reference list for some of them. More information can be found in the SlideRule users guide (TODO: Add link to users guide)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"HunblfZjn7"}],"key":"lZcyV7oT9X"}],"key":"I8m7mNQ5aP"},{"type":"block","kind":"notebook-content","children":[{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Parameters","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"c8NMRBeHZU"}],"key":"xelJxW1b4C"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"poly","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"i0To8wSRi5"},{"type":"text","value":": Polygon defining region of interest.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Mb6zfLe8IO"}],"key":"Nahsk8Ba5f"}],"key":"Lw84q672eK"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"track","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"svfGBmkpc1"},{"type":"text","value":": Reference pair track number (1, 2, 3; 0 to include all three; defaults to 0).","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"BGG8TzZZts"}],"key":"ZPYLxBPWlZ"}],"key":"D5CdJYswNT"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"rgt","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ULSfFNZte4"},{"type":"text","value":": Reference ground track (defaults to all).","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"lpldXkjUrL"}],"key":"Ia6Lj5lXre"}],"key":"p34h0vmgVt"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"cycle","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"XoVStNDTZ4"},{"type":"text","value":": Counter of 91-day repeat cycles completed by the mission (defaults to all).","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"L0S7uMf8J3"}],"key":"y9GNjN9XVm"}],"key":"j4ZlvrGBF8"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"region","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"AykoKFTieA"},{"type":"text","value":": Geographic region for data product (defaults to global).","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"w6Nqf134Sn"}],"key":"mIJytnKeN0"}],"key":"z9BhIsG0W1"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"t0","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"TXQCY1dDYf"},{"type":"text","value":": Start time for filtering granules (%Y-%m%dT%h:%M:%SZ format)","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"lF87HaeTvE"}],"key":"TKVqeEfYP2"}],"key":"d20dKgIS9H"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"t1","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Ihzl4Sx6xW"},{"type":"text","value":": Stop time for filtering granules (%Y-%m%dT%h:%M:%SZ format).","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"XqGx0gVAWy"}],"key":"k5qITfS4I8"}],"key":"s3dZfboBgL"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"srt","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"f76RQCOtQN"},{"type":"text","value":": Surface type (0=land, 1=ocean, 2=sea ice, 3=land ice, 4=inland water).","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"dw3lRpoEmg"}],"key":"UjEMtqGG1E"}],"key":"nQrBsBjcgY"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"cnf","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"daNZRTSawB"},{"type":"text","value":": Confidence level for photon selection, in integer or list format.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"wAW4GqpM5H"}],"key":"f1xnT9Mwmj"}],"key":"CGOiMHNJUI"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"atl08_class","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"pUCPFUucLi"},{"type":"text","value":": List of ATL08 classifications for photon processing (“atl08_noise”, “atl08_ground”, “atl08_canopy”, “atl08_top_of_canopy”, “atl08_unclassified”).","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"qBXhmKGY9f"}],"key":"k7H3fwDAUn"}],"key":"fuCBliyVZw"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"maxi","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"Nu2vOFcy0X"},{"type":"text","value":": Maximum interations of algorithm, not including initial least-squares-fit selection.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"X5gUAYkYhM"}],"key":"dijL4ozlx1"}],"key":"niJ59W0m99"},{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"H_min_win","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"OUKLMOgjDq"},{"type":"text","value":": Minimum height to which the refined photon-selection window is allowed to shrink, in meters.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"BMVEcJCtgV"}],"key":"ckgPQOZ4Jp"}],"key":"XK1jUWGblh"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"sigma_r_max","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"MPead3kC2I"},{"type":"text","value":": Maximum robust spread (uncertainty) in meters.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"HRKfU3j067"}],"key":"GrtGdfAuEI"}],"key":"dB7zcMkJd7"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"compact","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"Amvpq4sAAd"},{"type":"text","value":": Return results without most metadata.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"KPmY3GDmbw"}],"key":"PeFazfGqx5"}],"key":"eWK6cYOnar"}],"key":"tWGwU5eaOG"}],"key":"ZmATyxt99k"}],"key":"mTsb40xbgd"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"## Build SlideRule request\n# Define parameters (described below)\nparms = {\n    \"poly\": region,\n    \"srt\": icesat2.SRT_LAND,\n    \"cnf\": icesat2.CNF_SURFACE_HIGH,\n    \"atl08_class\": [\"atl08_ground\"],\n    \"ats\": 5.0,\n    \"len\": 20.0,\n    \"res\": 10.0,\n    \"maxi\": 5\n}\n\n# Calculated ATL06 dataframe\nis2_df = icesat2.atl06p(parms)\n\n# Print SlideRule output\nprint(is2_df.head())","key":"B4Ysrp6cXd"},{"type":"output","id":"aLDodCy9E3p-i4gD_dFTh","data":[{"output_type":"stream","name":"stdout","text":"                                h_sigma      x_atc        y_atc  pflags  \\\ntime                                                                      \n2018-10-20 00:56:22.190070016  0.034847  7650522.0 -4500.666992       0   \n2018-10-20 00:56:22.191480064  0.031803  7650532.0 -4500.652832       0   \n2018-10-20 00:56:22.192890112  0.030313  7650542.0 -4500.643555       0   \n2018-10-20 00:56:22.194302976  0.030625  7650552.0 -4500.636719       0   \n2018-10-20 00:56:22.195713024  0.035575  7650562.0 -4500.632812       0   \n\n                                   h_mean  dh_fit_dx  gt  segment_id  \\\ntime                                                                   \n2018-10-20 00:56:22.190070016  954.377483   0.046045  50      381674   \n2018-10-20 00:56:22.191480064  954.520714  -0.019317  50      381675   \n2018-10-20 00:56:22.192890112  954.356697  -0.011487  50      381675   \n2018-10-20 00:56:22.194302976  954.276748  -0.007737  50      381676   \n2018-10-20 00:56:22.195713024  954.128257  -0.017723  50      381676   \n\n                               n_fit_photons  rms_misfit  spot  region  rgt  \\\ntime                                                                          \n2018-10-20 00:56:22.190070016             58    0.262867     2       3  327   \n2018-10-20 00:56:22.191480064             48    0.219899     2       3  327   \n2018-10-20 00:56:22.192890112             44    0.201046     2       3  327   \n2018-10-20 00:56:22.194302976             36    0.183061     2       3  327   \n2018-10-20 00:56:22.195713024             48    0.221270     2       3  327   \n\n                               w_surface_window_final  cycle  \\\ntime                                                           \n2018-10-20 00:56:22.190070016                     3.0      1   \n2018-10-20 00:56:22.191480064                     3.0      1   \n2018-10-20 00:56:22.192890112                     3.0      1   \n2018-10-20 00:56:22.194302976                     3.0      1   \n2018-10-20 00:56:22.195713024                     3.0      1   \n\n                                                  geometry  \ntime                                                        \n2018-10-20 00:56:22.190070016  POINT (-149.49739 68.60363)  \n2018-10-20 00:56:22.191480064  POINT (-149.49742 68.60372)  \n2018-10-20 00:56:22.192890112  POINT (-149.49745 68.60381)  \n2018-10-20 00:56:22.194302976   POINT (-149.49748 68.6039)  \n2018-10-20 00:56:22.195713024  POINT (-149.49751 68.60399)  \n"}],"key":"INZ2rsCc0q"}],"key":"ydd18GyBGA"},{"type":"block","kind":"notebook-content","children":[{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Note","key":"tzteRh8S8p"}],"key":"Duauvwk23s"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We defined our ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"NxUcBho16B"},{"type":"inlineCode","value":"region","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"o6iOgOqZ7S"},{"type":"text","value":" above, so let’s run through the remaining parameters in our query:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"zRduuQpKMI"}],"key":"B2Eli5B7R5"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"srt","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"GRYpjBY2lc"},{"type":"text","value":": Only land photons will be considered.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"JKIw1FIapg"}],"key":"G1Zj05vefY"}],"key":"sIWR0mVCKF"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"cnf","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"yTWhDFmcBR"},{"type":"text","value":": Only high-confidence photons.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"YR4gnfuK6G"}],"key":"wJgnKAlFfi"}],"key":"qKwJNUBRYF"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"atl08_class","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"iuaVfj3ABK"},{"type":"text","value":": Only ground photons, as identified by the ATL08 algorithm.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"P5gTDQNmOG"}],"key":"erolnuR8fA"}],"key":"xft8SMQeHp"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"ats","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"rNl2UjNFy9"},{"type":"text","value":": The maximum along-track spread (uncertainty) in aggregated photons will be 5 m.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"LZZVNMfolB"}],"key":"gQQQi5SjXx"}],"key":"NpZxgyhRAs"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"len","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"lTKa1qO551"},{"type":"text","value":": The length of each segment of aggregated photons will be 20 m.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"X1aCh1O6OY"}],"key":"AcBXCxiyTK"}],"key":"n07Bd2e6EK"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"res","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"W05Ndd25VR"},{"type":"text","value":": The along-track resolution will be 10 m. Because each segment will be 20 m long, there will be overlap between successive data points.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"gpFlhvRjXN"}],"key":"tZQvy82wqV"}],"key":"fXhVsD3ZDn"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"maxi","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"NjpwLgwgus"},{"type":"text","value":": The SlideRule refinement algorithm will iterate 5 times per segment at maximum.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"uVdSWzkDoi"}],"key":"rVJw4DR7Hw"}],"key":"UvNlWis7vU"}],"key":"Ve6L3pvonX"}],"key":"U6EXQxrGts"}],"key":"U15VcDevZO"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Subsetting the Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OyHCX5QIhw"}],"identifier":"subsetting-the-data","label":"Subsetting the Data","html_id":"subsetting-the-data","implicit":true,"key":"TUYv6DjOhn"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"One may notice that the algorithm took a long time to generate the GeoDataFrame. That is because (i) our region of interest was rather large and (ii) we obtained all ICESat-2 tracks in the ROI since its launch (2018).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aqC3R3QRt9"}],"key":"u3hKWnkI7T"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For the sake of interest, let’s take a look at all of the ICESat-2 tracks over Upper Kuparuk/Toolik.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"BTSFRVCQ0x"}],"key":"mwQcnPrbBp"}],"key":"Y7jRjq45Zc"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import contextily as ctx\nfrom shapely.geometry import Polygon\n\n# Convert region to a Polygon\ncoords = [(point[\"lon\"], point[\"lat\"]) for point in region]\npolygon = Polygon(coords)\nregion_gdf = gpd.GeoDataFrame([1], geometry=[polygon], crs=\"EPSG:4326\")\n\n# Reproject to Web Mercator for contextily\nis2_df_mercator = is2_df.to_crs(epsg=3857)\nregion_mercator = region_gdf.to_crs(epsg=3857)\n\n\nfig, ax = plt.subplots(figsize=(12, 8))\n# Plot surface height\nis2_df_mercator.plot(column='h_mean', \n                  ax=ax, \n                  cmap='viridis',\n                  legend=True,\n                  markersize=10,\n                  alpha=0.8)\n\n# Plot the region bounding box\nregion_mercator.plot(ax=ax, \n                     facecolor='none', \n                     edgecolor='red', \n                     linewidth=2)\n\n# Add ESRI World Imagery basemap\nctx.add_basemap(ax, \n                crs=is2_df_mercator.crs, \n                source=ctx.providers.Esri.WorldImagery)\nplt.tight_layout()\nplt.show()","key":"oNJqR33Ocn"},{"type":"output","id":"HmFTtVUDg1FTol10tWIvJ","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mModuleNotFoundError\u001b[39m                       Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[5]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mcontextily\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mctx\u001b[39;00m\n\u001b[32m      2\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mshapely\u001b[39;00m\u001b[34;01m.\u001b[39;00m\u001b[34;01mgeometry\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m Polygon\n\u001b[32m      4\u001b[39m \u001b[38;5;66;03m# Convert region to a Polygon\u001b[39;00m\n\n\u001b[31mModuleNotFoundError\u001b[39m: No module named 'contextily'","ename":"ModuleNotFoundError","evalue":"No module named 'contextily'"}],"key":"l5TfbeZuFV"}],"key":"ONm6Kpkpi9"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"It is cool to see all of the available data, but we only have snow-free lidar DEMs available from March 2022. So, we are going to subset the data to include one ICESat-2 track (","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QAxD1zAYBg"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"RGT 152","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yhlIFsJXrg"}],"key":"OB71K31T6I"},{"type":"text","value":") in ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YeO2Cgeg8o"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"March 2023","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VTW1I4Ej4S"}],"key":"JMeMERBEYg"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"b6u3LC5Djc"}],"key":"YgY2Gbnjie"}],"key":"hrE2PQ4ekg"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Subset ICESat-2 data to single RGT, time of year\nis2_df_subset = is2_df[is2_df['rgt']==152]\nis2_df_subset = is2_df_subset.loc['2023-03-31']\n\n# Display top of dataframe\nprint(is2_df_subset.head())","key":"WN6G42xawn"},{"type":"output","id":"U71ekLvwNpPj3P_Jnv9RX","data":[],"key":"jbjORw6Asx"}],"key":"lSKvlg1hfJ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Sample the Lidar DTM to ICESat-2 ground track","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YUwuRMAeah"}],"identifier":"sample-the-lidar-dtm-to-icesat-2-ground-track","label":"Sample the Lidar DTM to ICESat-2 ground track","html_id":"sample-the-lidar-dtm-to-icesat-2-ground-track","implicit":true,"key":"bI4rIGdNio"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The ICESat-2 data is ready to go! Now it’s time to load the airborne lidar data, and co-register it with ICESat-2.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AmgwAdJnnt"}],"key":"evmBR1qA8X"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The lidar data used here is from the University of Alaska, Fairbanks (UAF). The UAF lidar obtains snow-on and snow-off DEMs/digital terrain models (DTMs) with a 1064 nm (near-infrared) laser, from which it can also derive snow depth.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"WpegGNTHjk"}],"key":"IZZTHuqmRh"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"UAF lidar rasters normally have a spatial resolution of 0.5 m, which can take a long time to process. As a compromise between computation speed and resolution, we will coarsen the rasters to 3 m resolution.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"s2VM7pfG5c"}],"key":"z23IlVJktc"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"The best way to handle lidar DEMs/DTMs is through ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"pyATNfRNZg"},{"type":"inlineCode","value":"rioxarray","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ycJilzsHth"},{"type":"text","value":":","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"HQ6UGvXiTG"}],"key":"AoeaS1vs3L"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"TODO: Access UAF lidar data without needing it locally.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"OYPeeVuKi7"}],"key":"d3bjSsXrHz"}],"key":"yQvjcjKjwh"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import earthaccess\nearthaccess.login(strategy='interactive', persist=True)\nauth = earthaccess.login()","key":"xAodR9pcB2"},{"type":"output","id":"HhFidH5kFLHkQOa5mz9i1","data":[],"key":"MmRLrBOpky"}],"key":"BRJoVLOTMl"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Coordinates for SW/NE corners\nlon_min = min([coord[0] for coord in coords])\nlat_min = min([coord[1] for coord in coords])\nlon_max = max([coord[0] for coord in coords])\nlat_max = max([coord[1] for coord in coords])\n\n# Data query for lidar point clouds over Fairbanks, AK\nresults = earthaccess.search_data(\n    short_name='SNEX23_Lidar',\n    bounding_box = (lon_min, lat_min, lon_max, lat_max),\n    temporal = ('2023-03-13', '2023-03-14')\n)","key":"eKY0o2znUo"},{"type":"output","id":"23pIWIhRG9fKjh_I3b5Bz","data":[],"key":"x7fawkXxTv"}],"key":"IeUsaLL51u"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# File paths for UAF rasters (TODO: Add lidar files, and update names)\ntifpath = \"/your/path/here\"\nf_snow_off = f\"{tifpath}/uaf_lidar_snowoff.tif\"\nf_snow_on = f\"{tifpath}/uaf_lidar_snowon.tif\"\n\n# Load files as rioxarray datasets\nlidar_snow_off = rxr.open_rasterio(f_snow_off)\nlidar_snow_on = rxr.open_rasterio(f_snow_on)","key":"MJZ0hR17up"},{"type":"output","id":"NKjwZXICcF4sN7ihsA6St","data":[],"key":"gpT2vqjKtN"}],"key":"uiiIIgM669"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"It is not immediately obvious, but the uAF rasters are in a different spatial projection than ICESat-2. UAF is in ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GpfPmHmOKF"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"EPSG:32606","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PRI7f0aBBo"}],"key":"WyxGjhantt"},{"type":"text","value":", and ICESat-2 is in ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"T0cUplJP5q"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"WGS84/EPSG:4326","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yoPm6gNYI3"}],"key":"sQ6Wt5rPzS"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NXQmB0R5hP"}],"key":"P0nzIBLDX0"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In order to directly compare these two datasets, we are going to add reprojected coordinates to the ICESat-2 GeoDataFrame. In essence, we will go from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jfDsk3ZS3u"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"latitude/longitude","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zhWva9CQPR"}],"key":"ScymrfZwlK"},{"type":"text","value":" to ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TgJFM1ryir"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"northing/easting","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vANCtVZJTZ"}],"key":"fqL6zUc3e9"},{"type":"text","value":". Luckily, there is an easy way to do this with GeoPandas, specifically with the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"q4kx55l5bd"},{"type":"inlineCode","value":"geopandas.to_crs()","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"a4ywT013Dr"},{"type":"text","value":" function.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Ox7Mq8cHxq"}],"key":"Iz41QiBXVl"}],"key":"VeJ1MG32Lw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Initialize ICESat-2 coordinate projection\nis2_df_subset = is2_df_subset.set_crs(\"EPSG:4326\")\n\n# Change to EPSG:32606\nis2_df_subset = is2_df_subset.to_crs(\"EPSG:32606\")\n\n# Display top of dataframe\nprint(is2_df_subset.head())","key":"jmLkFX0hWO"},{"type":"output","id":"R5EESuXfcjfR1MPeadOsP","data":[],"key":"qkRq5SWC1e"}],"key":"uWGw7RxY1u"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Co-register rasters and ICESat-2","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kz1d47vie0"}],"identifier":"co-register-rasters-and-icesat-2","label":"Co-register rasters and ICESat-2","html_id":"co-register-rasters-and-icesat-2","implicit":true,"key":"qy8Qd7ZWWz"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now, we are going to co-register both rasters to the queried ICESat-2 data. The function below is fairly long, but the gist is that we a re using a spline interpolant to match both the snow-off UAF data (surface height) and UAF snow depths with ICESat-2 surface heights. The resulting GeoDataFrame will have both ICESat-2 and UAF data in it.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"JnkdxT9Zbl"}],"key":"U4zoUyegzp"}],"key":"LMx26JvAcG"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Make coregistration function\ndef coregister_is2(lidar_snow_off, lidar_snow_on, is2_df):\n    \"\"\"\n    Co-registers UAF data with ICESat-2 data with a rectangular \n    bivariate spline.\n\n    Parameters\n    ------------\n    lidar_snow_off: rioxarray dataset\n        Lidar DEM/DTM in rioxarray format.\n    lidar_snow_on: rioxarray dataset\n        Lidar-derived snow depth in rioxarray format.\n    is2_df: GeodataFrame\n        GeoDataFrame for the ICESat-2 data generated with SlideRule.\n\n    Returns\n    ------------\n    is2_uaf_df: GeoDataFrame\n        Contains the coordinate and elevation data that matches best\n        between ICESat-2 and UAF.\n    \"\"\"\n\n    # Helper function to prepare lidar data\n    def prepare_lidar_data(raster):\n        coords_x = np.array(raster.x)\n        coords_y = np.array(raster.y)\n        values = np.array(raster.sel(band=1))[::-1, :]\n        values[np.isnan(values)] = -9999\n        return coords_x, coords_y, values\n\n    # Get coordinates and height/depth values from lidar data\n    x0, y0, dem_heights = prepare_lidar_data(lidar_snow_off)\n    xs, ys, dem_depths = prepare_lidar_data(lidar_snow_on)\n\n    # Generate interpolators\n    interp_height = RectBivariateSpline(y0[::-1], x0, dem_heights)\n    interp_height = RectBivariateSpline(ys[::-1], xs, dem_depths)\n\n    # Pre-filter IS2 data to bounds (apply once instead of per beam)\n    x_bounds = (is2_df.geometry.x > np.min(x0)) & (is2_df.geometry.x < np.max(x0))\n    y_bounds = (is2_df.geometry.y > np.min(y0)) & (is2_df.geometry.y < np.max(y0))\n    is2_filtered = is2_df[x_bounds & y_bounds].copy()\n\n    if is2_filtered.empty:\n        print('Error with GeoDataFrame or raster bounds.')\n        return gpd.GeoDataFrame()\n\n    # Extract coordinates once\n    xn = is2_filtered.geometry.x.values\n    yn = is2_filtered.geometry.y.values\n\n    # Estimate lidar height and snow depth at the ICESat-2 coordinates\n    lidar_heights = interp_height(yn, xn, grid=False)\n    lidar_snow_depths = interp_depth(yn, xn, grid=False)\n\n    # Create result DataFrame in one operation\n    is2_uaf_df = gpd.GeoDataFrame({\n        'x': xn,\n        'y': yn,\n        'time': is2_filtered.index.values,\n        'beam': is2_filtered['gt'].values,\n        'lidar_height': lidar_heights,\n        'lidar_snow_depth': lidar_snow_depths,\n        'is2_height': is2_filtered['h_mean'].values,\n        'h_sigma': is2_filtered['h_sigma'].values,\n        'dh_fit_dx': is2_filtered['dh_fit_dx'].values\n    })\n\n    # Add coordinate transformation\n    transformer = Transformer.from_crs(\"EPSG:32606\", \"EPSG:4326\", always_xy=True)\n    is2_uaf_df['lon'], is2_uaf_df['lat'] = transformer.transform(\n        is2_uaf_df['x'], is2_uaf_df['y']\n    )\n\n    return is2_uaf_df","key":"A7ntJop7mc"},{"type":"output","id":"tfafaDqjHh5nMUP7bW6an","data":[],"key":"lyCFp8Vod2"}],"key":"GodsxalK5P"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Co-locate ICESat-2 and UAF using the above function\nis2_uaf_df = coregister_is2(lidar_snow_off, \n                            lidar_snow_on, \n                            is2_df_subset\n                           )\n# Convert to a GeoDataFrame\ngeom = gpd.points_from_xy(is2_uaf_df.lon, is2_uaf_df.lat)\nis2_uaf_gdf = gpd.GeoDataFrame(is2_uaf_df,\n                               geometry=geom,\n                               crs=\"EPSG:4326\"\n                              )\n# Print head of GeoDataFrame\nis2_uaf_gdf.head()","key":"c95ZiZxw08"},{"type":"output","id":"JE1KXZPQKft5KesY39GaX","data":[],"key":"XKecjfWXkA"}],"key":"XLTtXCFLrf"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"As one can see, we now have a GeoDataFrame that includes several useful variables:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sK4U5MWyhX"}],"key":"vP95RU0tmp"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"beam","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"E5Pz27AJPL"},{"type":"text","value":": ICESat-2 beam (gt1l, gt2l, etc.)","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"sEwVUkNdJa"}],"key":"H7LMNX32hr"}],"key":"hyjgMqzs9U"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"lidar_height","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GaasnXGvVK"},{"type":"text","value":": Snow-off surface height from UAF lidar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UWAyaYKfT4"}],"key":"aKdfucQd7r"}],"key":"v3JfdKylFL"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"lidar_snow_depth","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ghpcHF0Cgx"},{"type":"text","value":": Snow depth derived from UAF.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"pXfkhZSVRv"}],"key":"XYpRMKtzWX"}],"key":"Egc4q0gyzw"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"is2_height","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"eT3gKXG0dl"},{"type":"text","value":": ICESat-2 surface height (snow-on, in this case).","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"UZxut1brf7"}],"key":"K7VO6DBaff"}],"key":"PnqX4npe7Q"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"h_sigma","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"sk1lJG6ywx"},{"type":"text","value":": ICESat-2 height uncertainty.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"kCF52G26vn"}],"key":"snfxk9XQG6"}],"key":"M2bxn5jMPO"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"dh_fit_dx","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"uZS5rKkYTw"},{"type":"text","value":": Along-track slope of the terrain.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"GnDLFBV12A"}],"key":"LDY0Se8IdY"}],"key":"Ws1pk9aRau"}],"key":"hCeelYFR2k"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"With this GeoDataFrame, it is very simple to derive snow depth!","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"uKVCGhONEi"}],"key":"xMt81knxrv"}],"key":"gZDgmMmlLX"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Derive snow depth using snow-on/snow-off differencing\nis2_uaf_gdf['is2_snow_depth'] = is2_uaf_gdf['is2_height'] - is2_uaf_gdf['lidar_height']\n\n# Estimate the residual (bias) between IS-2 and UAF depths\nis2_uaf_gdf['snow_depth_residual'] = is2_uaf_gdf['is2_snow_depth'] - is2_uaf_gdf['lidar_snow_depth']","key":"ic4g2oXoAU"},{"type":"output","id":"WQpaKNGYpQBpGwEH8ZCkc","data":[],"key":"Xzzb3inlPE"}],"key":"EtSRewPdv6"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Horray! We finally have ICESat-2 snow depths! Let’s make a couple of plots with the data we have.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GXz3y2t7dV"}],"key":"UWbA7PHTVG"}],"key":"ISmuCMBaD3"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Map Plot","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LFLHlCvxYW"}],"identifier":"map-plot","label":"Map Plot","html_id":"map-plot","implicit":true,"key":"LYXhWddljS"}],"key":"u1wZkJ9AIJ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Create plot\nfig, ax = plt.subplots(figsize=(12, 8))\n# Plot surface height\nis2_uaf_gdf.to_crs(\"EPSG:3857\").plot(column='is2_snow_depth', \n                  ax=ax, \n                  cmap='viridis',\n                  legend=True,\n                  markersize=10,\n                  alpha=0.8)\n\n# Plot the region bounding box\nregion_mercator.plot(ax=ax, \n                     facecolor='none', \n                     edgecolor='red', \n                     linewidth=2)\n\n# Add ESRI World Imagery basemap\nctx.add_basemap(ax, \n                crs=\"EPSG:3857\", \n                source=ctx.providers.Esri.WorldImagery)\nplt.tight_layout()\nplt.show()","key":"sVPgydWfrM"},{"type":"output","id":"B-2LUeV20SOCUNvi0xw_k","data":[],"key":"NgjHPaYqlI"}],"key":"pNI9wyao9U"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Along-track plots","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"c1qfvIKMW4"}],"identifier":"along-track-plots","label":"Along-track plots","html_id":"along-track-plots","implicit":true,"key":"xhiMNitBAC"}],"key":"e9N1otfbql"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Plot snow depths for the three strong beams\nfig,axs = plt.subplots(3)\n\n#Left strong beam\ntmp_df = is2_uaf_gdf[is2_uaf_gdf['beam']==10]\naxs[0].plot(tmp_df['lat'], tmp_df['is2_snow_depth'], label='ICESat-2')\naxs[0].plot(tmp_df['lat'], tmp_df['lidar_snow_depth'], label='UAF')\naxs[0].set_title('gt1l')\naxs[0].legend()\n\n# Central strong beam\ntmp_df = is2_uaf_gdf[is2_uaf_gdf['beam']==30]\naxs[1].plot(tmp_df['lat'], tmp_df['is2_snow_depth'])\naxs[1].plot(tmp_df['lat'], tmp_df['lidar_snow_depth'])\naxs[1].set_ylabel('Snow depth [m]', fontsize=18)\naxs[1].set_title('gt2l')\n\n# Right strong beam\ntmp_df = is2_uaf_gdf[is2_uaf_gdf['beam']==50]\naxs[2].plot(tmp_df['lat'], tmp_df['is2_snow_depth'])\naxs[2].plot(tmp_df['lat'], tmp_df['lidar_snow_depth'])\naxs[2].set_xlabel('Latitude [m]', fontsize=18)\naxs[2].set_title('gt3l')\nplt.tight_layout()\n\n# Only include outer axis labels\nfor ax in axs:\n    ax.label_outer()\n    ax.set_ylim([0, 1.5])","key":"upvhyedCLR"},{"type":"output","id":"wv_OlvxBNXrYVaI4sbPd_","data":[],"key":"JEXU0rPGeL"}],"key":"KxREnWrty4"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Scatter Plot","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wHDZd7zl7Q"}],"identifier":"scatter-plot","label":"Scatter Plot","html_id":"scatter-plot","implicit":true,"key":"CfvKW4mHwZ"}],"key":"z6q7nhxcPO"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(figsize=(12,6))\ns = is2_uaf_gpd.plot.scatter(ax=ax,\n                             x='lidar_snow_depth',\n                             y='is2_snow_depth',\n                             c='snow_depth_residual',\n                             vmin=-0.5, vmax=0.5\n                            )\nax.set_xlabel(\"UAF snow depth [m]\", fontsize=18)\nax.set_ylabel(\"ICESat-2 snow depth [m]\", fontsize=18)\nax.set_xlim([0, 1.5])\nax.set_ylim([0, 1.5])\ncbar = fig.colorbar(s, ax=ax)\ncbar.set_label(\"Snow depth residual [m]\")\nplt.tight_layout()","key":"jt1ZgWabjE"},{"type":"output","id":"ubFa_G7cpt81N2UrPA88V","data":[],"key":"AYgfP3MRUW"}],"key":"dq9vui2GDu"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QODzuUdwBG"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"L0A0qxv1Yy"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"🎉 Congratulations! You have completed this tutorial and have seen how to compare ICESat-2 to raster data, how to obtain ICESat-2 data with SlideRule, and how to calculate snow depths from ICESat-2 data.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"vaPuQveBzK"}],"key":"MBWD2kn5BY"}],"key":"chZwrnkCkt"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Reference","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NDv0ohfUYI"}],"identifier":"reference","label":"Reference","html_id":"reference","implicit":true,"key":"hartfvZHbf"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"To further explore the topics of this tutorial, see the following detailed documentation: (TODO: ADD LINKS TO SITES AND PAPERS)","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"cPiWmWt9eW"}],"key":"YF3qIniuY3"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"SlideRule Website","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eKxOQI6zeZ"}],"key":"jbSU0yJHsq"}],"key":"rQz45Le4CY"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"SlideRule online demo","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"PJxgwYUzdo"}],"key":"gIqx5FGMc6"}],"key":"Uov1yR4bpB"}],"key":"Qhb9CLa9oi"},{"type":"heading","depth":3,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Papers","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"yD5YDccVe3"}],"identifier":"papers","label":"Papers","html_id":"papers","implicit":true,"key":"rgvfFyWsWQ"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Deems, Jeffrey S., et al. “Lidar Measurement of Snow Depth: A Review.” Journal of Glaciology, vol. 59, no. 215, 2013, pp. 467–79. ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"LKaoq6PewS"},{"type":"link","url":"http://DOI.org","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"DOI.org","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"e5Af4AX9TI"}],"urlSource":"http://DOI.org","key":"gl9cKr9iG1"},{"type":"text","value":" (Crossref), ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"g3hn7kQlVZ"},{"type":"cite","url":"https://doi.org/10.3189/2013JoG12J154","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Deems ","key":"Q9edxlosJe"},{"type":"emphasis","children":[{"type":"text","value":"et al.","key":"oX4UXLJx6l"}],"key":"yneBDKBpQC"},{"type":"text","value":" (2013)","key":"gjuivvfHLQ"}],"kind":"narrative","label":"Deems_2013","identifier":"https://doi.org/10.3189/2013JoG12J154","enumerator":"1","key":"nRGCp5KEYF"},{"type":"text","value":".","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"X7IuNwtCvL"}],"key":"xVYHst0VVM"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Nuth, C., and A. Kääb. “Co-Registration and Bias Corrections of Satellite Elevation Data Sets for Quantifying Glacier Thickness Change.” The Cryosphere, vol. 5, no. 1, Mar. 2011, pp. 271–90. ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"IohRYQzqHy"},{"type":"link","url":"http://DOI.org","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"DOI.org","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"pKYokzGpb1"}],"urlSource":"http://DOI.org","key":"nE6v5fxRfp"},{"type":"text","value":" (Crossref), ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"BaExmMGJ4d"},{"type":"cite","url":"https://doi.org/10.5194/tc-5-271-2011","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Nuth & Kääb (2011)","key":"hhZmjZPO6z"}],"kind":"narrative","label":"Nuth_2011","identifier":"https://doi.org/10.5194/tc-5-271-2011","enumerator":"2","key":"Q8FckOMBOs"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"N8DaNvg1La"}],"key":"GF1DyJWsMZ"}],"key":"H80AKIIDOi"}],"key":"DV1glrBznb"},"references":{"cite":{"order":["Deems_2013","Nuth_2011"],"data":{"Deems_2013":{"label":"Deems_2013","enumerator":"1","doi":"10.3189/2013jog12j154","html":"Deems, J. S., Painter, T. H., & Finnegan, D. C. (2013). Lidar measurement of snow depth: a review. <i>Journal of Glaciology</i>, <i>59</i>(215), 467–479. <a target=\"_blank\" rel=\"noreferrer\" href=\"https://doi.org/10.3189/2013jog12j154\">10.3189/2013jog12j154</a>","url":"https://doi.org/10.3189/2013jog12j154"},"Nuth_2011":{"label":"Nuth_2011","enumerator":"2","doi":"10.5194/tc-5-271-2011","html":"Nuth, C., & Kääb, A. (2011). Co-registration and bias corrections of satellite elevation data sets for quantifying glacier thickness change. <i>The Cryosphere</i>, <i>5</i>(1), 271–290. <a target=\"_blank\" rel=\"noreferrer\" href=\"https://doi.org/10.5194/tc-5-271-2011\">10.5194/tc-5-271-2011</a>","url":"https://doi.org/10.5194/tc-5-271-2011"}}}},"footer":{"navigation":{"prev":{"title":"DRAFT: Bathymetry Applications","url":"/notebooks/bathymetry","group":"Example Workflows"},"next":{"title":"Awesome ICESat-2","url":"/additional-resources/awesome","group":"Additional Resources"}}},"domain":"http://localhost:3000"}